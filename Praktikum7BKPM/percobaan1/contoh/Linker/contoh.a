;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 23/04/2018
;Author  : Windows User
;Company :
;Comments:
;
;
;Chip type               : ATmega16
;Program type            : Application
;AVR Core Clock frequency: 11,059200 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*****************************************************/
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned char data;
;unsigned char lcd[16];
;
;// Alphanumeric LCD functions
;#include <alcd.h>
;
;// External Interrupt 0 service routine
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 0021 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0022 // Place your code here
; 0000 0023 data++;
;PCODE: $0000000F VOL: 0
; 0000 0024 }
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0028 {
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 0029 // Reinitialize Timer 0 value
; 0000 002A TCNT0=0x94;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 002B // Place your code here
; 0000 002C 
; 0000 002D }
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 0032 {
;PCODE: $0000001A VOL: 0
; 0000 0033 // Declare your local variables here
; 0000 0034 
; 0000 0035 // Input/Output Ports initialization
; 0000 0036 // Port A initialization
; 0000 0037 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0038 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0039 PORTA=0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 003A DDRA=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 003B 
; 0000 003C // Port B initialization
; 0000 003D // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
; 0000 003E // State7=T State6=1 State5=1 State4=1 State3=1 State2=1 State1=T State0=T
; 0000 003F PORTB=0x7C;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0040 DDRB=0x7C;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0041 
; 0000 0042 // Port C initialization
; 0000 0043 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0044 // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0045 PORTC=0x00;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0046 DDRC=0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0047 
; 0000 0048 // Port D initialization
; 0000 0049 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004A // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 004B PORTD=0x00;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 004C DDRD=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 004D 
; 0000 004E // Timer/Counter 0 initialization
; 0000 004F // Clock source: System Clock
; 0000 0050 // Clock value: 11059,200 kHz
; 0000 0051 // Mode: Normal top=0xFF
; 0000 0052 // OC0 output: Disconnected
; 0000 0053 TCCR0=0x01;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0054 TCNT0=0x94;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0055 OCR0=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0056 
; 0000 0057 // Timer/Counter 1 initialization
; 0000 0058 // Clock source: System Clock
; 0000 0059 // Clock value: Timer1 Stopped
; 0000 005A // Mode: Normal top=0xFFFF
; 0000 005B // OC1A output: Discon.
; 0000 005C // OC1B output: Discon.
; 0000 005D // Noise Canceler: Off
; 0000 005E // Input Capture on Falling Edge
; 0000 005F // Timer1 Overflow Interrupt: Off
; 0000 0060 // Input Capture Interrupt: Off
; 0000 0061 // Compare A Match Interrupt: Off
; 0000 0062 // Compare B Match Interrupt: Off
; 0000 0063 TCCR1A=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0064 TCCR1B=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0065 TCNT1H=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0066 TCNT1L=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0067 ICR1H=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0068 ICR1L=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0069 OCR1AH=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 006A OCR1AL=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 006B OCR1BH=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 006C OCR1BL=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 006D 
; 0000 006E // Timer/Counter 2 initialization
; 0000 006F // Clock source: System Clock
; 0000 0070 // Clock value: Timer2 Stopped
; 0000 0071 // Mode: Normal top=0xFF
; 0000 0072 // OC2 output: Disconnected
; 0000 0073 ASSR=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0074 TCCR2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0075 TCNT2=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0076 OCR2=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0077 
; 0000 0078 // External Interrupt(s) initialization
; 0000 0079 // INT0: On
; 0000 007A // INT0 Mode: Rising Edge
; 0000 007B // INT1: Off
; 0000 007C // INT2: Off
; 0000 007D GICR|=0x40;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 007E MCUCR=0x03;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 007F MCUCSR=0x00;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0080 GIFR=0x40;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0081 
; 0000 0082 // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0083 TIMSK=0x01;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0084 
; 0000 0085 // USART initialization
; 0000 0086 // USART disabled
; 0000 0087 UCSRB=0x00;
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0088 
; 0000 0089 // Analog Comparator initialization
; 0000 008A // Analog Comparator: Off
; 0000 008B // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 008C ACSR=0x80;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 008D SFIOR=0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 008E 
; 0000 008F // ADC initialization
; 0000 0090 // ADC disabled
; 0000 0091 ADCSRA=0x00;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0092 
; 0000 0093 // SPI initialization
; 0000 0094 // SPI disabled
; 0000 0095 SPCR=0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0096 
; 0000 0097 // TWI initialization
; 0000 0098 // TWI disabled
; 0000 0099 TWCR=0x00;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 009A 
; 0000 009B // Alphanumeric LCD initialization
; 0000 009C // Connections are specified in the
; 0000 009D // Project|Configure|C Compiler|Libraries|Alphanumeric LCD menu:
; 0000 009E // RS - PORTD Bit 0
; 0000 009F // RD - PORTD Bit 1
; 0000 00A0 // EN - PORTD Bit 2
; 0000 00A1 // D4 - PORTD Bit 4
; 0000 00A2 // D5 - PORTD Bit 5
; 0000 00A3 // D6 - PORTD Bit 6
; 0000 00A4 // D7 - PORTD Bit 7
; 0000 00A5 // Characters/line: 16
; 0000 00A6 lcd_init(16);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 00A7 
; 0000 00A8 // Global enable interrupts
; 0000 00A9 #asm("sei")
;PCODE: $00000066 VOL: 0
	sei
;PCODE: $00000067 VOL: 0
; 0000 00AA 
; 0000 00AB while (1)
;PCODE: $00000068 VOL: 0
; 0000 00AC       {
; 0000 00AD       // Place your code here
; 0000 00AE        lcd_gotoxy(0,0);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 00AF lcd_putsf("INT0");
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 00B0 sprintf(lcd,"%i",data);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 00B1 lcd_gotoxy(0,0);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00B2 lcd_puts(lcd);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 00B3       }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 00B4 }
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
